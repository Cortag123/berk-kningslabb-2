import numpy as np
import matplotlib.pyplot as plt
import numpy.polynomial.polynomial as polynomial
import scipy.optimize as optimize 

#uppgift 1

print()
print('######### Uppgift 1 #########')

pol1 = ([1,4,-97,-112,272,2724,-4320])
print(np.roots(pol1))


#Uppgift 2

print()
print('######### Uppgift 2 #########')
roots = [-8,-7,-3,-2,5]
pol = polynomial.polyfromroots(roots)
print(pol)

x =np.linspace(-50,50, num = 1000)
y = polynomial.polyval(x,pol)
plt.plot(x,y)
plt.grid()
plt.title("Uppgift 2")
plt.show()


#Uppgift 3

print()
print('######### Uppgift 3 #########')

f = lambda t: 4*np.e**(-0.5*t) + 1.3**(t)
t = np.linspace(1.6,2.8, num = 1000)
integral = np.trapz(f(t),t)
print(integral)

y = f(t)

plt.plot(t,y)
plt.title("Uppgift 3")
plt.grid()
plt.show()

print("Verkar rimligt")


#Uppgift 4

print()
print('######### Uppgift 4 #########')

g = lambda x: (np.cos(np.e**(x)))/(1-x)
x = np.linspace(2,3)
plt.plot(x,g(x))
plt.title("Uppgift 4")
plt.grid()
plt.show()

min1 = optimize.minimize(g,2.5)
min2 = optimize.minimize(g,2.9)
print(min1.fun,min1.x)
print(min2.fun,min2.x)

#Uppgift 5

print()
print('######### Uppgift 5 #########')

h = lambda x:
